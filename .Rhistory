#Et0
raw_wb2 = t( as_tibble(thorntwaite_budget_raw$W_balance$Et0) )
colnames(raw_wb2) = str_c(1:12)
raw_wb2 = raw_wb2 %>%
as.data.frame %>%
rownames_to_column(.,
var = 'year')
raw_wb2$Variable = "Potential_Evap"
water_budget = rbind(water_budget,raw_wb2)
remove(raw_wb2)
#Storage
raw_wb2           = t( as_tibble(thorntwaite_budget_raw$W_balance$Storage) )
colnames(raw_wb2) = str_c(1:12)
raw_wb2 = raw_wb2 %>%
as.data.frame %>%
rownames_to_column(.,
var = 'year')
raw_wb2$Variable = "Storage"
water_budget = rbind(water_budget,raw_wb2)
remove(raw_wb2)
#'Prec. - PotEvap.'
raw_wb2 = t( as_tibble(thorntwaite_budget_raw$W_balance$'Prec. - Evap.') )
colnames(raw_wb2) = str_c(1:12)
raw_wb2 = raw_wb2 %>%
as.data.frame %>%
rownames_to_column(.,
var = 'year')
raw_wb2$Variable = "Prec_m_PE"
water_budget = rbind(water_budget,raw_wb2)
remove(raw_wb2)
#Deficit
raw_wb2 = t( as_tibble(thorntwaite_budget_raw$W_balance$Deficit) )
colnames(raw_wb2) = str_c(1:12)
raw_wb2 = raw_wb2 %>%
as.data.frame %>%
rownames_to_column(.,
var = 'year')
raw_wb2$Variable = "Deficit"
water_budget = rbind(water_budget,raw_wb2)
remove(raw_wb2)
#Surplus
raw_wb2 = t( as_tibble(thorntwaite_budget_raw$W_balance$Surplus) )
colnames(raw_wb2) = str_c(1:12)
raw_wb2 = raw_wb2 %>%
as.data.frame %>%
rownames_to_column(.,
var = 'year')
raw_wb2$Variable = "Surplus"
water_budget = rbind(water_budget, raw_wb2)
remove(raw_wb2)
water_budget = gather(data  = water_budget,
key   = month,
value = "value",
str_c(1:12))
water_budget$Date = as.Date(str_c(water_budget$year,
"-",
water_budget$month,
"-15",
sep = ""))
water_budget = spread(data = water_budget,
key  = "Variable",
value = "value")
water_budget = water_budget %>% arrange(Date)
# finish the budget by critical parameters
# calculate evapotransporation
water_budget = water_budget %>%
mutate(Evaporation = Potential_Evap - Deficit)
# calculate precipitation - true evaporation
water_budget = water_budget %>%
mutate(Prec_m_Evap = Precipitation - Evaporation)
# calculate recharge by calculating the increase in soil storage from rainfall
water_budget = water_budget %>%
mutate(Recharge = c(NA, diff(x = Storage,
lag = 1))) %>%
mutate(Recharge = ifelse(test = Recharge>0,
yes  = Recharge,
no   = 0))
# separate recharge from surplus in teh water budget
water_budget = water_budget %>%
mutate(Surplus = Surplus - Recharge)  %>%
mutate(Surplus = ifelse(test = Surplus>0,
yes  = Surplus,
no   = 0))
# calculate recharge by calculating the increase in soil storage from rainfall
water_budget = water_budget %>%
mutate(Snowpack = Prec_m_Evap - Recharge - Surplus)  %>%
mutate(Snowpack = ifelse(test = Snowpack>0,
yes  = Snowpack,
no   = 0))
# repair precip-PE (seems to be a typo in the original ClimClass Code)
water_budget = water_budget %>%
mutate(Prec_m_PE = Precipitation - Potential_Evap)
water_budget$Temp_Avg = round(thorntwaite_inputs$Tm[1:length(water_budget$Precipitation)],2)
water_budget$Temp_Max = round(thorntwaite_inputs$Tx[1:length(water_budget$Precipitation)],2)
water_budget$Temp_Min = round(thorntwaite_inputs$Tn[1:length(water_budget$Precipitation)],2)
water_budget$Time             = thorntwaite_inputs$Time
water_budget$Snowpack         = round(water_budget$Snowpack,5)
water_budget$Scenario         = unique(local_loca2_monthly$Scenario)
water_budget$Model            = unique(local_loca2_monthly$Model)
water_budget$Member           = unique(local_loca2_monthly$Member)
water_budget$Percentile       = unique(local_loca2_monthly$Percentile)
water_budget$Climate_Division = unique(local_loca2_monthly$climdiv)
water_budget = water_budget %>% select(Scenario,
Model,
Member,
Percentile,
Time,
Climate_Division,
Temp_Min,
Temp_Avg,
Temp_Max,
Precipitation,
Potential_Evap,
Evaporation,
Deficit,
Storage,
Snowpack,
Recharge,
Surplus,
Prec_m_PE,
Prec_m_Evap)
if (scenario != Scenarios[2]) {
water_budget = water_budget |>
filter(Scenario != "Historical")
}
if (first) {
LOCA2_Water_Budget = water_budget
} else {
LOCA2_Water_Budget = rbind(LOCA2_Water_Budget,
water_budget)
}
}
}
# Libraries
# Tidyverse resources
library(package = "tidyverse") # Multiple Tidyverse Resources
library(package = "lubridate") # Date-Time Control
library(package = "showtext")
library(package = "sysfonts")
library(package = "svglite")
library(package = "extRemes") # NCEI  Data Retrieval Package
library(package = "ClimClass")
library(package = "showtext")
font_add_google(name   = "Open Sans",
family = "OpenSans")
showtext::showtext_auto()
showtext::showtext_opts(dpi = 300)
scenario_color = c(       "blue","forestgreen", "goldenrod","firebrick")
scenario_fill  = c("deepskyblue",      "green",      "gold",      "red")
# User Modification Area
# Climate Division Selection
target_climate_zone = "3902"
# Spatial Aggregation Statistic
#   MEAN, P000, P025, P050, P075, P100
target_aggregation_statistic = "MEAN"
# Target Return Interval
target_return_interval = 100
# Time Settings
period_length = 30
# "Historical" and "Future" Period References
historical_period_end = 2014
future_period_center  = 2050
#    future_period_center  = 2099-14
# Derived Time Parameters
historical_period_start = historical_period_end - (period_length - 1)
future_period_end       = future_period_center + floor((period_length)/2.)
future_period_start     = future_period_center - floor((period_length)/2.)+1
#    future_period_end = 2099
future_period_start = future_period_end - period_length - 1
#    future_period_end   = 2099
future_period_start = future_period_end - period_length - 1
# future_period_end   = 2050+15
# future_period_start = 2050-14
remove(future_period_center)
historical_period_string = str_c("(",
historical_period_start,
"-",
historical_period_end,
")",
sep="")
historical_date_range = c(as.Date(str_c(historical_period_start, "-01-01", sep="")),
as.Date(str_c(  historical_period_end, "-01-01", sep="")))
future_period_string     = str_c("(",
future_period_start,
"-",
future_period_end,
")",
sep="")
future_date_range = c(as.Date(str_c(future_period_start, "-01-01", sep="")),
as.Date(str_c(  future_period_end, "-01-01", sep="")))
# Libraries
# Tidyverse resources
library(package = "tidyverse") # Multiple Tidyverse Resources
library(package = "lubridate") # Date-Time Control
library(package = "showtext")
library(package = "sysfonts")
library(package = "svglite")
library(package = "extRemes") # NCEI  Data Retrieval Package
library(package = "ClimClass")
library(package = "showtext")
# Graphics, Plotting, and Label Parameters
font_add_google(name   = "Open Sans",
family = "OpenSans")
showtext::showtext_auto()
showtext::showtext_opts(dpi = 300)
scenario_color = c(       "blue","forestgreen", "goldenrod","firebrick")
scenario_fill  = c("deepskyblue",      "green",      "gold",      "red")
historical_period_string = str_c("(",
historical_period_start,
"-",
historical_period_end,
")",
sep="")
historical_date_range = c(as.Date(str_c(historical_period_start, "-01-01", sep="")),
as.Date(str_c(  historical_period_end, "-01-01", sep="")))
future_period_string     = str_c("(",
future_period_start,
"-",
future_period_end,
")",
sep="")
future_date_range = c(as.Date(str_c(future_period_start, "-01-01", sep="")),
as.Date(str_c(  future_period_end, "-01-01", sep="")))
# Pull the Metadata for the Climate Divisions
climdiv_metadata_file = str_c("https://kyrill.ias.sdsmt.edu:8443/thredds/fileServer/" ,
"LOCA2/" ,
"Specific_Regional_Aggregate_Sets/NCEI_Climate_Divisions/" ,
"NCEI_nClimDiv_LUT.RData",
sep = "")
load(url(climdiv_metadata_file),
verbose = TRUE)
closeAllConnections()
# Pull the nclimdiv data
nclimdiv_file = str_c("https://kyrill.ias.sdsmt.edu:8443/thredds/fileServer/" ,
"CLASS_Examples/" ,
"nCLIMDIV.Rdata",
sep = "")
load(url(nclimdiv_file),
verbose = TRUE)
closeAllConnections()
remove(nCLIMDIV_LUT)
remove(climdiv_metadata_file)
remove(nclimdiv_file)
nCLIMDIV = nCLIMDIV |>
rename("climdiv"    = Full_Zone_Code,
"Time"       = Date,
"tasmax"     = TMAX,
"tasavg"     = TMPC,
"tasmin"     = TMIN,
"pr"         = PCPN) |>
mutate("Year"       =  year(x = Time),
"Month"      = month(x = Time),
"Scenario"   = "nClimDiv",
"Percentile" ="Mean",
"Model"      = "NCEI",
"Member"     = "") |>
select("Scenario",
"Model",
"Member",
"Percentile",
"Year",
"Month",
"climdiv",
"Time",
"tasmax",
"tasavg",
"tasmin",
"pr") |>
filter((Year >= 1950) & (Year < 2025))
# User Modification Area
# Climate Division Selection
target_climate_zone = "3902"
# Spatial Aggregation Statistic
#   MEAN, P000, P025, P050, P075, P100
target_aggregation_statistic = "MEAN"
# Target Return Interval
target_return_interval = 100
# Time Settings
period_length = 30
# "Historical" and "Future" Period References
historical_period_end = 2014
future_period_center  = 2050
#    future_period_center  = 2099-14
# Derived Time Parameters
historical_period_start = historical_period_end - (period_length - 1)
future_period_end       = future_period_center + floor((period_length)/2.)
future_period_start     = future_period_center - floor((period_length)/2.)+1
#    future_period_end = 2099
future_period_start = future_period_end - period_length - 1
#    future_period_end   = 2099
future_period_start = future_period_end - period_length - 1
# future_period_end   = 2050+15
# future_period_start = 2050-14
remove(future_period_center)
# Crack our LOCA File for our climate zone
loca_file_name = str_c("https://kyrill.ias.sdsmt.edu:8443/thredds/fileServer/" ,
"LOCA2/" ,
"Specific_Regional_Aggregate_Sets/NCEI_Climate_Divisions/" ,
"R_Thornthwaite_Budgets/",
"LOCA2_V1_LOCA2_THORNTHWAITE_" ,
target_climate_zone ,
".RData",
sep = "")
load(url(loca_file_name),
verbose = TRUE)
closeAllConnections()
View(LOCA2_Water_Budget)
View(LOCA2_Water_Budget)
water_budget$Climate_Division = unique(local_loca2_monthly$climdiv)
source("~/GitHub/LOCA2_Gridded_Analysis/Loca2_WaterBudgets_Prep.R")
source("~/GitHub/LOCA2_Gridded_Analysis/Loca2_WaterBudgets_Prep.R")
View(water_budget)
View(water_budget)
local_loca2_monthly$climdiv
nclimdiv_monthly
target_climate_zone
debugSource("~/GitHub/LOCA2_Gridded_Analysis/Loca2_WaterBudgets_Prep.R")
debugSource("~/GitHub/LOCA2_Gridded_Analysis/Loca2_WaterBudgets_Prep.R")
View(loca2_monthly)
View(loca_metadata)
View(loca2_monthly)
debugSource("~/GitHub/LOCA2_Gridded_Analysis/Loca2_WaterBudgets_Prep.R")
View(loca2_monthly)
View(loca2_monthly)
Division
loca2_monthly$Division
loca2_monthly$Division = target_climate_zone
loca2_monthly$Division
levels(NCEI_nClimDiv_LUT$climdiv)
debugSource("~/GitHub/LOCA2_Gridded_Analysis/Loca2_WaterBudgets_Prep.R")
View(loca2_monthly)
View(loca2_monthly)
loca2_monthly = loca2_monthly |>
filter(Percentile == target_aggregation_statistic) |>
mutate("tasavg" = (tasmax + tasmin)/2)  |>
rename("climdiv"  = "Division")     |>
select("Scenario",
"Model",
"Member",
"Percentile",
"Year",
"Month",
"climdiv",
"Time",
"tasmax",
"tasavg",
"tasmin",
"pr")
Models    = unique(loca2_monthly$Model)
Scenarios = unique(loca2_monthly$Scenario)
remove(loca_file_name)
nclimdiv_monthly = NCEI_nClimDiv_LUT |>
filter(climdiv == target_climate_zone)
debugSource("~/GitHub/LOCA2_Gridded_Analysis/Loca2_WaterBudgets_Prep.R")
nclimdiv_monthly = NCEI_nClimDiv_LUT |>
filter(climdiv == target_climate_zone)
nclimdiv_monthly = NCEI_nClimDiv_LUT |>
filter(climdiv == target_climate_zone)
nclimdiv_monthly = NCEI_nClimDiv_LUT |>
filter(climdiv == target_climate_zone)
nclimdiv_monthly = NCEI_nClimDiv_LUT |>
filter(climdiv == target_climate_zone)
debugSource("~/GitHub/LOCA2_Gridded_Analysis/Loca2_WaterBudgets_Prep.R")
View(thorntwaite_inputs)
View(thorntwaite_inputs)
debugSource("~/GitHub/LOCA2_Gridded_Analysis/Loca2_WaterBudgets_Prep.R")
print(str_c("     - ",scenario))
thorntwaite_inputs = local_loca2_monthly |>
filter((Scenario == "Historical") | (Scenario == scenario)) |>
arrange(Time) |>
rename("year"  = Year,
"month" = Month,
"Tn"    = tasmin,
"Tm"    = tasavg,
"Tx"    = tasmax,
"P"     = pr)
thorntwaite_budget_raw = thornthwaite(series   = thorntwaite_inputs,
latitude = loca_metadata$climdiv_mean_latitude,
TAW      = loca_metadata$climdiv_mean_mass_content_of_water_in_soil,
snow.init = 0.)
# Precipitation
water_budget = t( as_tibble(thorntwaite_budget_raw$W_balance$Precipitation) )
View(thorntwaite_budget_raw)
View(thorntwaite_budget_raw)
View(thorntwaite_budget_raw[["W_balance"]][["Precipitation"]])
View(water_budget)
colnames(water_budget) = str_c(1:12)
water_budget = water_budget %>%
as.data.frame %>%
rownames_to_column(.,
var = 'year')
water_budget$Variable = "Precipitation"
View(water_budget)
View(water_budget)
#Et0
raw_wb2 = t( as_tibble(thorntwaite_budget_raw$W_balance$Et0) )
colnames(raw_wb2) = str_c(1:12)
raw_wb2 = raw_wb2 %>%
as.data.frame %>%
rownames_to_column(.,
var = 'year')
raw_wb2$Variable = "Potential_Evap"
View(raw_wb2)
View(raw_wb2)
water_budget = rbind(water_budget,raw_wb2)
remove(raw_wb2)
View(water_budget)
#Storage
raw_wb2           = t( as_tibble(thorntwaite_budget_raw$W_balance$Storage) )
colnames(raw_wb2) = str_c(1:12)
raw_wb2 = raw_wb2 %>%
as.data.frame %>%
rownames_to_column(.,
var = 'year')
raw_wb2$Variable = "Storage"
water_budget = rbind(water_budget,raw_wb2)
remove(raw_wb2)
View(thorntwaite_budget_raw)
View(thorntwaite_budget_raw)
raw_wb2 = raw_wb2 %>%
as.data.frame %>%
rownames_to_column(.,
var = 'year')
raw_wb2$Variable = "Prec_m_ET"
water_budget = rbind(water_budget,raw_wb2)
remove(raw_wb2)
Q
View(thorntwaite_budget_raw)
View(thorntwaite_budget_raw)
thorntwaite_budget_raw[["W_balance"]][["Precipitation"]]
# calculate recharge by calculating the increase in soil storage from rainfall
water_budget = water_budget %>%
mutate(Recharge = c(NA, diff(x = Storage,
lag = 1))) %>%
mutate(Recharge = ifelse(test = Recharge>0,
yes  = Recharge,
no   = 0))
debugSource("~/GitHub/LOCA2_Gridded_Analysis/Loca2_WaterBudgets_Prep.R")
View(water_budget)
View(water_budget)
water_budget$Precipitation - water_budget$Prec_m_ET
# calculate recharge by calculating the increase in soil storage from rainfall
water_budget = water_budget %>%
mutate(Recharge = c(NA, diff(x = Storage,
lag = 1))) %>%
mutate(Recharge = ifelse(test = Recharge>0,
yes  = Recharge,
no   = 0))
debugSource("~/GitHub/LOCA2_Gridded_Analysis/Loca2_WaterBudgets_Prep.R")
View(water_budget)
View(water_budget)
water_budget$Precipitation - water_budget$Prec_m_ET
water_budget$Precipitation - water_budget$Potential_Evap
debugSource("~/GitHub/LOCA2_Gridded_Analysis/Loca2_WaterBudgets_Prep.R")
water_budget$Precipitation - water_budget$Potential_Evap
Q
water_budget$Member           = thorntwaite_inputs$Member
water_budget$Percentile       = thorntwaite_inputs$Percentile
debugSource("~/GitHub/LOCA2_Gridded_Analysis/Loca2_WaterBudgets_Prep.R")
water_budget$Climate_Division = thorntwaite_inputs$climdiv
water_budget = water_budget %>% select(Scenario,
Model,
Member,
Percentile,
Time,
Climate_Division,
Temp_Min,
Temp_Avg,
Temp_Max,
Precipitation,
Potential_Evap,
Evaporation,
Deficit,
Storage,
Snowpack,
Recharge,
Surplus,
Prec_m_PE,
Prec_m_Evap)
thorntwaite_inputs$Scenario
water_budget$Scenario         = thorntwaite_inputs$Scenario
Q
debugSource("~/GitHub/LOCA2_Gridded_Analysis/Loca2_WaterBudgets_Prep.R")
water_budget = water_budget %>% select(Scenario,
Model,
Member,
Percentile,
Time,
Climate_Division,
Temp_Min,
Temp_Avg,
Temp_Max,
Precipitation,
Potential_Evap,
Evaporation,
Deficit,
Storage,
Snowpack,
Recharge,
Surplus,
Prec_m_PE,
Prec_m_Evap)
View(LOCA2_Water_Budget)
View(LOCA2_Water_Budget)
Q
debugSource("~/GitHub/LOCA2_Gridded_Analysis/Loca2_WaterBudgets_Prep.R")
scenario
scenario
scenario
debugSource("~/GitHub/LOCA2_Gridded_Analysis/Loca2_WaterBudgets_Prep.R")
View(LOCA2_Water_Budget)
View(LOCA2_Water_Budget)
